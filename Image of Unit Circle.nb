(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     92466,       1969]
NotebookOptionsPosition[     89303,       1856]
NotebookOutlinePosition[     89657,       1872]
CellTagsIndexPosition[     89614,       1869]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\t\t\t\t\t\t\t", 
  RowBox[{"(*", 
   RowBox[{"**", " ", "SVD"}], " ", "***)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"**", " ", "Given"}], " ", "a", " ", "matrix", " ", "A"}], " ", 
     "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{
    "which", " ", "represents", " ", "a", " ", "\[IndentingNewLine]", 
     "horizontal", " ", "shear"}], ",", " ", 
    RowBox[{
     RowBox[{"(", "1", ")"}], " ", "find", " ", "vectors", " ", "w", " ", 
     "and", " ", "v", " ", 
     RowBox[{"s", ".", "t", ".", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"w", " ", ".", " ", "v"}], " ", "=", " ", "0"}], ")"}]}], " ",
      "\[IndentingNewLine]", "and", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", 
        RowBox[{
         RowBox[{"(", "w", ")"}], ".", "A"}], 
        RowBox[{"(", "v", ")"}]}], " ", "=", " ", "0"}], ")"}], " ", "then", 
     " ", 
     RowBox[{"(", "2", ")"}], " ", "show", " ", "how", " ", "the", " ", 
     "image", " ", "of", " ", "a", " ", "unit", " ", "circle", " ", "is", 
     "\[IndentingNewLine]", "transformed", " ", "by", " ", "matrix", " ", 
     RowBox[{"A", "."}]}]}], " ", "***)"}]}]], "Input",
 CellChangeTimes->{{3.673218226920937*^9, 3.673218494444804*^9}, 
   3.6732186882545633`*^9, {3.673220460066395*^9, 3.673220477343987*^9}, {
   3.6732205600601482`*^9, 3.673220565154166*^9}, {3.673221019980062*^9, 
   3.6732210219045677`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "create"}], " ", "a", " ", "symmetric", " ", 
    "matrix"}], " ", "***)"}], "\[IndentingNewLine]", 
  RowBox[{"A", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.673218511864052*^9, 3.673218534749127*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.673218559296151*^9, 3.673218560274259*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.673218560584799*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"S", " ", "=", " ", 
  RowBox[{
   RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}]}]], "Input",
 CellChangeTimes->{{3.673218544051764*^9, 3.673218550721942*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6732185565860233`*^9, 3.6732185575730343`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1"},
     {"1", "2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.673218557855229*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"**", " ", "solving"}], " ", "this", " ", 
     RowBox[{"matrix", "'"}], "s", " ", "characteristic", " ", "polynomial", 
     " ", "gives", " ", "eigenvalues", " ", "\[IndentingNewLine]", "l"}], " ",
     "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SqrtBox["5"]}], ")"}], "/", "2"}], " ", "and", " ", "m"}], " ", "=", 
     " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "-", 
         SqrtBox["5"]}], ")"}], "/", "2"}], " ", "with", " ", "corresponding",
       " ", "eigenvectors", " ", "w", " ", "and", " ", 
      RowBox[{"v", "."}]}]}]}], " ", "***)"}], "\[IndentingNewLine]", 
  RowBox[{"l", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "+", 
      SqrtBox["5"]}], ")"}], "/", "2", " "}]}]}]], "Input",
 CellChangeTimes->{{3.6732185735528917`*^9, 3.673218684785426*^9}, {
  3.6732187552692833`*^9, 3.67321876874787*^9}, {3.673219830875186*^9, 
  3.673219831743905*^9}, {3.67321999833629*^9, 3.673219998547729*^9}, {
  3.673220155713344*^9, 3.673220156399167*^9}, {3.673220418500918*^9, 
  3.673220449569388*^9}, {3.6732204800372343`*^9, 3.6732205343215723`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"3", "+", 
    SqrtBox["5"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6732201570215073`*^9, 3.67322104558532*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"3", "-", 
     SqrtBox["5"]}], ")"}], "/", "2"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"3", "-", 
    SqrtBox["5"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.673220158447378*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SqrtBox["5"]}], ")"}], "/", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.673218729185977*^9, 3.673218773073833*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SqrtBox["5"]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.673218750946629*^9, 3.6732187739734297`*^9}, 
   3.673218930954658*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SqrtBox["5"]}], ")"}], "/", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.673218776694901*^9, 3.6732187884127007`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SqrtBox["5"]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.673218788842791*^9, 3.673218933804414*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"**", " ", "find"}], " ", "unit", " ", "vectors"}], " ", 
  "***)"}]], "Input",
 CellChangeTimes->{{3.673218792350239*^9, 3.6732189836974277`*^9}, 
   3.673220163267445*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  RowBox[{"w", ".", "w"}]]], "Input",
 CellChangeTimes->{{3.673219001259508*^9, 3.673219002060952*^9}, {
  3.673219041377817*^9, 3.67321904309848*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{"1", "+", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SqrtBox["5"]}], ")"}], "2"]}]}]]], "Output",
 CellChangeTimes->{3.67321904537073*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  SqrtBox[
   RowBox[{"1", "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox["5"]}], ")"}], "2"]}]}]], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["1.902113032590307`"], "Output",
 CellChangeTimes->{3.673219046948037*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "1.902113032590307`"}], ")"}], "*", "w"}]}]], "Input",
 CellChangeTimes->{{3.673219048888538*^9, 3.673219065902361*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5257311121191336`", ",", "0.85065080835204`"}], "}"}]], "Output",\

 CellChangeTimes->{3.673219066458603*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  RowBox[{"v", ".", "v"}]]], "Input",
 CellChangeTimes->{{3.6732190736265*^9, 3.673219074619776*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{"1", "+", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SqrtBox["5"]}], ")"}], "2"]}]}]]], "Output",
 CellChangeTimes->{3.673219075628278*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  SqrtBox[
   RowBox[{"1", "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SqrtBox["5"]}], ")"}], "2"]}]}]], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["1.1755705045849463`"], "Output",
 CellChangeTimes->{3.6732190785397*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "1.1755705045849463`"}], ")"}], "*", "v"}]}]], "Input",
 CellChangeTimes->{{3.673219086899843*^9, 3.6732191003771973`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8506508083520399`", ",", 
   RowBox[{"-", "0.5257311121191336`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.673219101748315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "check"}], " ", "that", " ", "the", " ", "two", " ", 
    "vectors", " ", "w", " ", "and", " ", "v", " ", "are", " ", "unit", " ", 
    "vectors", " ", "and", " ", "orthogonal"}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"u", ".", "u"}]}]], "Input",
 CellChangeTimes->{{3.6732191054752617`*^9, 3.67321912427424*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.673219124805614*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", ".", "v"}]], "Input",
 CellChangeTimes->{{3.673219125648101*^9, 3.673219125798671*^9}}],

Cell[BoxData["0.9999999999999998`"], "Output",
 CellChangeTimes->{3.6732191261466713`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"u", ".", "v"}]], "Input",
 CellChangeTimes->{{3.6732191268798113`*^9, 3.673219127333756*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.1102230246251565`*^-16", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "basically"}], " ", "0"}], " ", "***)"}]}]], "Input",
 CellChangeTimes->{{3.673219130386032*^9, 3.67321913904285*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "check"}], " ", "that", " ", "transformation", " ", 
    "of", " ", "both", " ", "vectors", " ", "is", " ", "orthogonal"}], " ", 
   "***)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A", ".", "u"}], ")"}], ".", 
   RowBox[{"(", 
    RowBox[{"A", ".", "v"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.67321915939952*^9, 3.673219182680023*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.1102230246251565`*^-16", " ", 
  RowBox[{"(*", 
   RowBox[{"**", " ", "same"}], " ", "***)"}]}]], "Input",
 CellChangeTimes->{{3.673219190814227*^9, 3.6732191947307587`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Graph"}], " ", "circle", " ", "with", " ", "initial", 
    " ", "vectors", " ", "w", " ", "and", " ", "v"}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "*", "w"}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "t", "]"}], "*", "v"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673219206511848*^9, 3.673219250615657*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
//8L/w/gOQY7
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-0.9999999346595869, 0.9999998966222946}, {-0.9999999816288665,
    0.9999999474392924}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.673219251358193*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "Now"}], " ", "graph", " ", "transformed", " ", 
    "vectors"}], " ", "***)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.673219306351853*^9, 3.673219324704215*^9}, {
  3.6732201223440647`*^9, 3.6732201330560637`*^9}, {3.6732221262943373`*^9, 
  3.673222143254911*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SqrtBox["l"], "*", 
     RowBox[{"Cos", "[", "t", "]"}], "*", 
     RowBox[{"(", "w", ")"}]}], "+", 
    RowBox[{
     SqrtBox["m"], "*", 
     RowBox[{"Sin", "[", "t", "]"}], "*", 
     RowBox[{"(", "v", ")"}]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.2"}], ",", " ", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.673219333490539*^9, 3.6732193471553926`*^9}, {
  3.6732193851313467`*^9, 3.6732194046304207`*^9}, {3.6732197461151752`*^9, 
  3.673219777397892*^9}, {3.673219931017675*^9, 3.673219945346991*^9}, {
  3.6732200127131863`*^9, 3.673220016818708*^9}, {3.6732219353561163`*^9, 
  3.673221940984914*^9}, {3.673222109908535*^9, 3.6732221101840153`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
25su6YeQCWsCYsbS0Pf/fs/6f6n/8GE=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.2, 1.2}, {-1.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6732193479336863`*^9, {3.67321938838305*^9, 3.673219405186741*^9}, 
   3.6732194466656933`*^9, 3.6732197127248507`*^9, {3.6732197523713017`*^9, 
   3.6732197779131517`*^9}, 3.6732198481192408`*^9, 3.673219884623852*^9, {
   3.6732199340618973`*^9, 3.6732199458224277`*^9}, 3.673220017196228*^9, 
   3.673221941602747*^9, 3.673222110741191*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"**", " ", "From"}], " ", "just", " ", "looking", " ", "at", " ", 
    "this", " ", "graph"}], ",", " ", 
   RowBox[{
    RowBox[{"it", "'"}], "s", " ", "clear", " ", "that", " ", "the", " ", 
    "vertical", " ", "\[IndentingNewLine]", "vector", " ", "component", " ", 
    "is", " ", "transformed", " ", "more", " ", "than", " ", "the", " ", 
    "horizontal", " ", "one"}], ",", " ", "\[IndentingNewLine]", " ", 
   RowBox[{"suggesting", " ", "its", " ", "eigenvalue", " ", 
    RowBox[{"(", 
     RowBox[{"and", " ", "singular", " ", "value"}], ")"}], " ", "will", " ", 
    "be", " ", "the", " ", "greater", "\[IndentingNewLine]", "of", " ", "the",
     " ", 
    RowBox[{"two", "."}]}]}], " ", "***)"}]], "Input",
 CellChangeTimes->{{3.67322019945822*^9, 3.67322023739681*^9}, {
  3.673220337919812*^9, 3.673220396259272*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox["l"]], "Input",
 CellChangeTimes->{{3.6732205994401217`*^9, 3.673220600123872*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"3", "+", 
     SqrtBox["5"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.67322060254889*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  SqrtBox[
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      SqrtBox["5"]}], ")"}]}]], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["1.618033988749895`"], "Output",
 CellChangeTimes->{3.673220610816451*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox["m"]], "Input",
 CellChangeTimes->{{3.6732206120152473`*^9, 3.6732206128376207`*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"3", "-", 
     SqrtBox["5"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.673220613650469*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  SqrtBox[
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"3", "-", 
      SqrtBox["5"]}], ")"}]}]], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["0.6180339887498948`"], "Output",
 CellChangeTimes->{3.673220616128168*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"**", " ", "From"}], " ", "the", " ", "above"}], ",", " ", 
   RowBox[{
   "if", " ", "you", " ", "could", " ", "only", " ", "include", " ", "one", 
    " ", "value"}], ",", " ", 
   RowBox[{
   "the", " ", "graph", " ", "from", " ", "\[IndentingNewLine]", "including", 
    " ", "only", " ", "l", " ", "would", " ", "look", " ", "more", " ", 
    "like", " ", "the", " ", "full", " ", "transformation", " ", "than", " ", 
    "the", " ", "graph", "\[IndentingNewLine]", "including", " ", "only", " ", 
    RowBox[{"m", "."}]}]}], " ", "***)"}]], "Input",
 CellChangeTimes->{{3.67322062551537*^9, 3.673220662925956*^9}, {
  3.6732207153970337`*^9, 3.673220747434325*^9}, {3.673221108725729*^9, 
  3.67322111839289*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SqrtBox["l"], "*", 
     RowBox[{"Cos", "[", "t", "]"}], "*", 
     RowBox[{"(", "w", ")"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], "*", 
     RowBox[{"(", "v", ")"}]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.2"}], ",", " ", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6732207571725893`*^9, 3.6732207573375883`*^9}, {
  3.673220844724061*^9, 3.673220867156397*^9}, {3.673220900309945*^9, 
  3.67322094323746*^9}, {3.673221962696328*^9, 3.673222042605535*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
qTIs5CKF2+ebnZehtaLVqViNlwEUpnIOSwtuakOX0AuDvUEU3hCfex9R0YaO
IzpZQlcptJZbWLB1pA1r7yj8myDWVFA49XthO9IUZ5PrQyiUk33VtndvO2rr
xr8Nv0ah08XKoF8X23F789AmxzDy+odmOYkp7fjmliNHIZzCkvUfMj/1tWNm
ZYHzq+sUbjnre8xCuAN5Anb9dY8g++3AjKnZ0IH6GQYjyyIpXLqsf96n0x3o
rHXx4ekbFH56FfR5978ObNXm9e2OpvByeNS85wqd+OHy0F7vGArdk5IucrZ1
4rZM1nU28QPGifyAmE7M/T5YMhlLYaDownNvsztRbOu96mM3KSy1PGXIaOjE
BU/HZZqJ9500L9GQ6UIpP8Xbz25ReOjrE19boy40CarLF4ij0FU9hffYoS50
ysY1rsSH0jLOnAntwqV7O9r/Iy7vsioKfNaFQ8sWtfwjPur5+0dgVReOiVjK
Wt4m6wkyenVmtAv5Hp19GkV8SDbO5JgY6YNvws5VEhsIB0bYbu7GglMnYv8S
X6m9EqTh0I1j15eMqcVTqFGwXlLsAumL08G3nYm1hv6QFtGNw/J3L4UQG5lF
CWZ/7MalLQ45j4l/Bx7YfbanG93Mc5U/Ekss/bNSg68H+X69Ga4j3uTL5z6k
1IMrJvSZPcRLXs4tvWfRg4+DHY2HiZ9UXdEy8epBlyP89WPE7S/kc7piepBb
YvR6hFjgV0DoueweHFsp8JVO/HSnQrpgQw/eP+Ks2UR8c2He/JtTPajRua23
lPj09uF9EaI0LDOsanpJLHkp+vPnFTRUSRwSjyKW047fPreJhspHs+KPEVuM
fe9QBxpuD1VwNiT2k5K6ctiOhn3qtl6ixJ+ltFVuHqahmpRpSRPZr0wroZ48
fxqu1eI7mEzcJXIwoeMaDWPn0k33E9s9WbRt7g4Nx420vSWJPbwGbm3Op+HN
fT53z5Dzilz6UW57FQ0flurdXU5MT7RL3ddGQ+OqLZ2fSDy00xRtvX/T8IKU
hymLxEuK5IrAUwt68cD8dwdDiTsHtoWcWtmLu2celS0k5u56s9gderHY66v7
YhJ/Nz9urf+8uxczm+gyoSQ+jYbMH64+2ouzScpLR0g8X/wQsrMqshf/pVOD
z6IoXH9zh+KSB72oeq6j6BeJf6OrUVMumb1457+XLduJ57XeP9lV34tGSd8G
v5L8KR6YWyDN6MU+xdudgsTdnnxxO7i96NW1RFaP5Fu3hKraY1k6Jryz9Ysk
+ZkaMmoq6U5Hw81eca0kv/nOG56RP0fHvwKLGjquUKjSXeG2MYKOwdFXXVsv
UyjaO+Ok9pqOx1o4Tp+CKVzrN7eJYtPRJiOzU4fUF5ltdhkdAn24b9TokgCp
P4nfWwsKpftwcnyVd+05sv9N8hePG/RhSqKZ+rYzFPpzV7NCQvqQI2nhNeRL
4XB/sp9BQh/mJz+8cpXUv+fU8/3jT/uw3MaiX8KbQodaEwezqj7sL9BLlztO
Ycj6g64vxRjI13RpepzU25q/2x5qyjGw47HVfTs3Cu0vhq78sJmBlRv64964
Uih9jfvtrQMD908cvWTnTKFa5np3t2QGrt2mtN/SgcIsOo/8p9cMVH428PKc
PYUNqk4ziz8xMFLH2y7FjsLmqA892T0MbLNse9m0i9QLXCGcptSPpwQjb86Q
/qG5O9vnYGY/8hm6Zf4j/WiPrqyu/qd+9JGZYA9tJu+nUZC06Fs/Tj5l+39V
I+fnWCvxZqwfazYGKYVuJH//4U7f9I0DmKiR7PJSgZx3uYxr5MsBpAtvT6WR
/pihWPNFtGAAtQd8vvkupBD5t16/UTmA2+1WmU6LUBgcsIHv7MAAin67x2YL
UjjYpBIooDSIXd7nH776zcUri0UWi6cO4tNH0ikCA1xMb+s21M0cxOtDtXY6
fVz8lhZ01enjIG6ajdlzhMbFTaH/rG+0D+LCSwLbX7Vz8doWxdvp0kPI9m1m
s79zkeeW7dn82CGcVyglcT6PixuiBXrNLgyjp/WJBtMQLr6OzhZzDR8mc0fc
+R+XuBi4ukf+TMIwbj6V/8EpkIsfaxxGo7KHcX+ivZzzGTJP1L564zc4jKb7
tl5ffYyLfnK2fyX2jeBfl8PnXlhwcf3B1813VEdxcfH4msJ5ZL4JNto5YDiK
g0tSD6YKcNGi4LTR5h2j+GXxjt2XeLg4WSkZ+c59FN3OXvPbODONSfE3vU8k
jWKk45UMy8FpnLwXl36PZwwbWw4yI8qnMaXtqMpQ7RgumYxXlA+axpaFGlOn
28awrjTelDo3jTFOFg85A2MonWi4p9JvGk/mLA3r5h3H9zyHD+31mEZxp5MG
9rrjuHSxhZHy7mlM7Q/my0obx+S2k07/rZnGd7VdJit9JzDgyiDLumYKTy5Y
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
//9+yf8B9tUyXQ==
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{300.1469705746317, Automatic},
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.2, 1.2}, {-1.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.67322075795068*^9, {3.67322090896134*^9, 3.673220943776074*^9}, {
   3.673221991902289*^9, 3.673221999778166*^9}, 3.673222043085829*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], "*", 
     RowBox[{"(", "w", ")"}]}], "+", 
    RowBox[{
     SqrtBox["m"], "*", 
     RowBox[{"Sin", "[", "t", "]"}], "*", 
     RowBox[{"(", "v", ")"}]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.2"}], ",", " ", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", " ", "1.5"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6732207619912577`*^9, 3.673220762145733*^9}, {
   3.673220953353158*^9, 3.673220953507174*^9}, {3.673222007720454*^9, 
   3.673222009054748*^9}, 3.673222087434472*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
hxgNoIfEo/n2T9gYG+elIL5/ABWPuj2kPGVjxf4FK6LWDuBn7dp76Uls7Nrh
DLe/9mPAWW/++elsjF+yZ/bfg35M8R96YpDBxv0uzYEG1/rRRTndL+olG+X/
VH6LsepH008LN4uQPCqayXywRKkfBxbJst7lsNE+ddIzp7YPU9TXNTTlsvHo
tu9lVTl96D3v4K+Rt2xUtdFeQ43pQ8/lqVv+kbxkTjJ2DDj0YcafRcNfP7CR
T0X2SPK/XtyZH989VcjGyuelOraMXjResENqooh8v+uyNrJferFZ4bxZazEb
36xhcN2jepHyx/9sIcn7Qy49HuI3enHieUxGXAkbd/M9UMy07MX3jm/5tErJ
/NePmVat70UVnob4UmSj8x12l7ZILwb9bXfoIOYqueUgrwctI3c165aT/W/2
8Xj6oQd/VsQz54j/s850/ZfYg2UjypovK9joUrVkwOJOD1ae25nHrmSj4fio
6uzRHtT6cqzJt4qNa1ylNh/c2oMZ63s2L6pmY+kxTo7v0h4M6m1Plqlh49Lm
FY+Gu7pRLmKiJIp4YuXBOZHP3dg6Nim7oJaND4VeyCq+6MbkM2sje4lbqRWB
xue7cWqFVNaBOjZSf55lWOt34/jgtfkxxB1bxiXtVbpR+KhiEpvYKfPMKmup
bkzsl/NS+0LiuyRZ+PTvLkQ51Ugv4pSs970H+7vwuq0V+wNxR2Vk0qbyLnw6
G+w7QbzGeKvVgvQu/L4u3Wh1PRsnXwcup4d04ba5dKfjxHuXxA++u9SFQ49u
f7xEfKzO6YOPYRc+71+vG0rsLj6dfnBnFzIqIlckEVesPPThj0wXbl1aophD
TF1iNpk/24nM2yleH4hd+DXOOAx2onf+oflFxLv/m5sVrexEA42E1jziuJGU
weyMTqyIzezJIFZPVRc7HtaJShturosm5s10h/Zf7sS+vQuzvIn3x9y3vXiq
E1ctcvSw+N98fC7xUzs7cXtd1HU1Yrks/31XZTvx0K3nxfOJpRhfdXmzNPRU
iNFoI88/3tHcaTtIQ2ravX8xxDn3djObKmhoRvXjMya+0qrlszODjF9OOChK
PP+8bHp0KA35lzPwE1n/xx1tzhOXaHjB5cZtR+Jzlx83HjIk59juiz7CxIGm
/r0PyTl4N7X3YxrZ39t3y592SNPQ99mL6ToSD/cduk0N+ztwrm3XV0Pi3cz5
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
7Fz9HuxzhD7fK+cAX9IBLc2Ln2DgQM89AxEucEXa+iS/fILM2c5+WMSFYwKn
IhgbS8DFlaKpKM6FlfvYDNfhEtifPiQzLsuFtJDsmq1nSqGoI0JUejMXtN4a
Bz1NKQNZavDmVdpcCAhxVtZtKwOKZEBS0jEudPUHv/7xrwxSFEqWyumR+d0S
xjXOlsOcmO/AbyMunHhAO50oUwGq2R5LHG25wHgyL90rvBKs2wcWj93kQt1+
jvjgx0oYFROq+e3DBfdJ/oSDo5Ug6H/5wjw/LgRlZdd+16qC+OCZG/xBXKjX
6j235m8VnIo7++jVIy4YDKY+8nargSSrKPmUl1wozrDUfPCsBsz/kzQ6lMkF
p3NP9BMbauB5VYJL9xsuZDL/c0zdVAuTKrL7vr/jgqS2uab7YC0IzBmYUj9x
4Yq8ZPS4/hdo9Hw1o9HMBYtrg6uLvL/ANzfZ9batXNCx3B135+UXoH+xvXyr
nQvjifXyc3z1IOZ/8+wzGhcuVH+0ycyvh6L9qzMeDnBhlYmgvA69HlZMJpbd
pHOh72GIe69YA8z5y/x3dpgLDz6+y51ybADpEp0P4iwunG9Y4Ngu0wg+k4c8
NvK4MMSMydyn1Qi0u742PRNcePHhskqieyMovNN1Cv7KBf/s5C6dL43QMLeg
pHGaC7RHM+f0vZug+O0uX8EZLvzU2LhfqLcZrD7cnL95Pg/qhna9mBNqgRen
fA0vC/Fgv8NYMke1BdSuX83JWsAD/g8GB/PDWkBdQSRFYiEP5Clz3OmVreAq
Om0TuZgH5t7+X1tVW+GOY/z+50t4kLYhQDrzWCu8p/7dkL6UB94s+feGnq3g
nyGl/HwZDy5R/mW6NrTCQP7POXVpHshMPd+xdagVHEvXm0nI8CBIZXUu82cr
eBjqlQ0TC75bEKCn0AY9xZWll5bzoDJLsvH3njawinh/epMcD/5o6s2k6LdB
+QjjZw/x03MRE6NebeCnaeS8bSW5f+jRzHsP2yAzAHY2Enu53t21Kq0NzlfU
LT4nz4OD0ePph1vagJ+7mnt7FQ9+OdX7NTPa4L5p5gT/ah7wrYmTNp1pA/nS
4399iTViLlqbb2iHzgojLbs1PDg2Pjqert4ORmnzeK3Euz8vNp843Q7d2/c4
713Lg9FBoySVi+1QZ9yaF0ccFru12C2gHdoMClomiHUSJFNeJbTDgoz6zxoK
PJCSvmfY97YdhpX/+AQSv8r7Xbqwrh0OLdy7qJJY8uEkS22wHbzSz7v+Jh44
zCw3+9kO+sUByZvW8aB41OL49UUU4D95PVWfeJt0+/WI9RQw/rDvxkXi98NN
R1IPUCAoomqFP7H9aPvrd0YUMKtZ+ughcZG2c0rxeQoseSzX+Zg4PGnZplI/
Cnh703mRxCkK1iolcRQY13fouEfcfo9aXJBDgb1KGQ+u/G9cVODzy2oKlPnk
SJsR8wV6qsT0UcDh9113NWJjg0/ivtMU8E/b8WQB8WpLZzObhVSYaSqLpZDn
6dkmOndgLRWUlh1xiCOuHtj/e9leKjDP1PGdJo5def8Yw4AK53sc3ISI/ZVj
R3IdqXBJSin3HVlP+o9vldd8qMDfvavMmJg1uW9k12MqpMDzlEmyPzl7Fh74
+poKq976mQYQtwTzVaeVUSGqf7ZXjPigeon36U4yX+0OtQiy305XRQyTBDtA
TtfM7BaJj07GkL36ig5otY1dzyTxU/pkUQhFpQMSFBWrdIi/z/6dnLTuAD0Z
wVvfVvDAgiW78dq1DsiWzozaTzzwRNnke3gH/Ag453uLxKurr/A9elEHyDyf
bGTIkvmuKd/Ub+mAkyGqqouIrTsk9AuYHSBm6npxG8mHuSPT3m7LaCB5utnC
RIoHmsZH4MlFGtwwTd55RJwHGXOx/jR/Gig3LzykSPJPXT/QQzSeBqaQvk6E
5KeSz/5D9lU02LLt3aUcMR4IWA1+q1jZCZGucTJxJN/VlEun6lU7oaN3ZECd
1IOJBwFujcc6QVpG8U6PIA8snQWrPnl2wgKXnXp/+HmwaMBgq25jJyz8kL9u
aJYL1lteTr+id4LL6LIAO1Jvvh6bx+D70Qm9O1fV9/ziwt/YIaUk+S5okfgo
W/SDC+e+HmyKdu2CjEJ6sfwkF3Jdik5VBnSBq+M1D0dS7yxtHnZyYrvAYuOI
ZAaHC8Y1zymK2AV3DvOvXzbKBfqy1Hm2S7rhrsMbtxhST/t7TESs13VDtJh9
Qhqpt+VJq8dM9nTDo9v389/0cWFBmfs6NZtu0Lqk/OllFxd6r2bOpOR0g8jA
gw3HST3/QA3+cVqvB9TFk3r3lXIhRfCHCc+GmKV0oov0A8dDi474Xe0BKY23
79w+cuGtidzbqMQeuH527nJoAemv0/9Onh/tgWqJB29cSL+Juy5wpzugF1zp
Qc20aNJfv250E4ntJfnyR3p+FBfKrFYlq77uBcmMdPutEaTfCn15597SC6cq
zYScQrmw+BiIP1nRB8tsFB/f8+XCFqfi3LS8PpAtc3O+fo4Loelud6Jr+0DY
+Dad8r9+2loSequPjGdcy998lvSf4xk7twv1A1Ui8WKRCRf0+v+pbD3TD5LX
c7TcdbigOiCoc+NPP4yEHEs5vJELntZv6zrFB8AzvkVbWoELT9311m7fOABX
vKxNh+TJ9dP3D1QYDMC1dYWVZ6XIeunqOt9MGgD31IHpyXlc8DrK0tgIgzDm
zqJ5D3JAfX+fxjejQWiU8hqv7uGAoDHrXZ7TIKT5N/kJ0ziw8vb6AdmHg5Dg
/+CAZyMHzk5fSPLoG4TtT24sYxVxIKV/ovblATpseiYVtzOSAzvE/ANAmw4+
MUOhv8LI+M3Uo+0GdJgXWSlTcI8DLmMTzFE7Osz/sUd02S0OJC00WNsTTK6/
fP32eUdyvoqcP3j8ER0MbnreGLfhgGbCmsiCRDqMvH8p62DBAc+JBeXe2XSo
/HTZ4sBJDpzwXHGA9oEOB/uc/iYe50D8tzXPtpbRIaTH7tTUEQ6wh4Hh+4UO
dvtkTQ5pckDs/39fwvr/35f8HwIlWiE=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-1.2, 1.2}, {-1.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.673220762677986*^9, 3.673220954802065*^9, 
  3.673222009887587*^9, 3.673222088276496*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"**", " ", "This"}], " ", "is", " ", "basically", " ", "the", " ",
     "essence", " ", "of", " ", "lossy", " ", 
    RowBox[{"compression", ".", " ", 
     RowBox[{"Let", "'"}]}], "s", " ", "say", " ", "you", " ", "have", 
    "\[IndentingNewLine]", "200", " ", "singular", " ", "values", " ", 
    "instead", " ", "of", " ", "2.", " ", "If", " ", 
    RowBox[{"that", "'"}], "s", " ", "the", " ", "case"}], ",", " ", 
   RowBox[{
   "if", " ", "you", " ", "only", " ", "include", " ", "\[IndentingNewLine]", 
    "the", " ", "20", " ", "largest", " ", "singular", " ", "values", " ", 
    RowBox[{"you", "'"}], "ll", " ", "get", " ", "a", " ", "transformation", 
    " ", "that", " ", "looks", " ", "almost", " ", "like", " ", "the", " ", 
    "full", " ", "transformation", " ", "without", " ", "having", " ", "to", 
    " ", "include", " ", "the", " ", "full", " ", "matrix", " ", "A"}]}], " ",
   "***)"}]], "Input",
 CellChangeTimes->{{3.673221133506113*^9, 3.673221206549014*^9}, {
  3.673221402331058*^9, 3.673221424736622*^9}, {3.673222580099905*^9, 
  3.673222592952457*^9}}]
},
WindowSize->{808, 603},
WindowMargins->{{Automatic, 91}, {Automatic, 30}},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 29, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1677, 42, 114, "Input"],
Cell[2238, 64, 479, 13, 63, "Input"],
Cell[CellGroupData[{
Cell[2742, 81, 274, 8, 28, "Input"],
Cell[3019, 91, 627, 18, 47, "Output"]
}, Open  ]],
Cell[3661, 112, 185, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[3871, 120, 278, 8, 28, "Input"],
Cell[4152, 130, 627, 18, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4816, 153, 1262, 32, 85, "Input"],
Cell[6081, 187, 197, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6315, 198, 146, 5, 40, "Input"],
Cell[6464, 205, 174, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6675, 216, 272, 8, 40, "Input"],
Cell[6950, 226, 281, 9, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7268, 240, 274, 8, 40, "Input"],
Cell[7545, 250, 251, 8, 47, "Output"]
}, Open  ]],
Cell[7811, 261, 225, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[8061, 271, 175, 4, 34, "Input"],
Cell[8239, 277, 246, 9, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8522, 291, 260, 10, 56, "Input"],
Cell[8785, 303, 87, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8909, 309, 214, 5, 28, "Input"],
Cell[9126, 316, 151, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9314, 325, 125, 3, 34, "Input"],
Cell[9442, 330, 247, 9, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9726, 344, 260, 10, 56, "Input"],
Cell[9989, 356, 86, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10112, 362, 212, 5, 28, "Input"],
Cell[10327, 369, 170, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10534, 378, 403, 9, 46, "Input"],
Cell[10940, 389, 72, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11049, 395, 115, 2, 28, "Input"],
Cell[11167, 399, 90, 1, 28, "Output"]
}, Open  ]],
Cell[11272, 403, 117, 2, 28, "Input"],
Cell[11392, 407, 232, 5, 28, "Input"],
Cell[11627, 414, 444, 12, 46, "Input"],
Cell[12074, 428, 205, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[12304, 436, 621, 17, 46, "Input"],
Cell[12928, 455, 19309, 327, 375, "Output"]
}, Open  ]],
Cell[32252, 785, 361, 8, 46, "Input"],
Cell[CellGroupData[{
Cell[32638, 797, 1082, 29, 68, "Input"],
Cell[33723, 828, 14948, 252, 447, "Output"]
}, Open  ]],
Cell[48686, 1083, 897, 18, 80, "Input"],
Cell[CellGroupData[{
Cell[49608, 1105, 106, 2, 34, "Input"],
Cell[49717, 1109, 189, 7, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49943, 1121, 201, 8, 56, "Input"],
Cell[50147, 1131, 87, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50271, 1137, 108, 2, 34, "Input"],
Cell[50382, 1141, 190, 7, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50609, 1153, 201, 8, 56, "Input"],
Cell[50813, 1163, 88, 1, 28, "Output"]
}, Open  ]],
Cell[50916, 1167, 784, 16, 63, "Input"],
Cell[CellGroupData[{
Cell[51725, 1187, 902, 26, 68, "Input"],
Cell[52630, 1215, 17332, 292, 402, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69999, 1512, 879, 26, 67, "Input"],
Cell[70881, 1540, 17253, 290, 447, "Output"]
}, Open  ]],
Cell[88149, 1833, 1150, 21, 80, "Input"]
}
]
*)

(* End of internal cache information *)
